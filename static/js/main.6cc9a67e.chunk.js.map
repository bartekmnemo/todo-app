{"version":3,"sources":["components/AddTask.js","components/Task.js","components/TasksList.js","components/App.js","reportWebVitals.js","index.js"],"names":["AddTask","state","addNewTask","console","log","htmlFor","type","id","placeholder","size","value","onClick","this","Component","Task","props","style","color","task","text","date","className","TasksList","active","tasks","filter","done","ActiveTask","map","DoneTask","App","finishDate","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mPAkCeA,E,4MA7BXC,MAAQ,G,EAIRC,WAAa,WACTC,QAAQC,IAAI,U,4CAEhB,WACI,OACI,qCACI,0CAEA,gCAAK,uBAAOC,QAAQ,YAAf,oBAAyC,uBAAOC,KAAK,QAAQC,GAAG,YAAYC,YAAY,gBAC7F,gCAAK,uBAAOH,QAAQ,WAAf,8BAAL,IAAwD,uBAAOC,KAAK,OAAOC,GAAG,WAAWE,KAAK,SAC9F,gCAAK,uBAAOJ,QAAQ,QAAf,wBACD,yBAAQE,GAAG,QAAX,UACI,wBAAQG,MAAM,SAAd,oBACA,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,WAAd,sBACA,wBAAQA,MAAM,YAAd,6BAGR,wBAAQC,QAASC,KAAKV,WAAtB,iBACA,8B,GAxBMW,aCOPC,EATF,SAAAC,GACT,IAAMC,EAAQ,CACVC,MAAOF,EAAMG,KAAKD,OAEtB,OACI,oBAAGD,MAAOA,EAAV,UAAiB,iCAASD,EAAMG,KAAKC,OAArC,aAA8DJ,EAAMG,KAAKE,KAAzE,IAA+E,iCAAQ,mBAAGC,UAAU,mBAApG,IAAiI,iCAAQ,mBAAGA,UAAU,2BCY/IC,EAhBG,SAAAP,GACd,IAAMQ,EAASR,EAAMS,MAAMC,QAAO,SAAAP,GAAI,OAAoB,IAAhBA,EAAKK,UACzCG,EAAOX,EAAMS,MAAMC,QAAO,SAAAP,GAAI,OAAoB,IAAhBA,EAAKK,UACvCI,EAAaJ,EAAOK,KAAI,SAAAV,GAAI,OAAI,cAAC,EAAD,CAAoBA,KAAMA,GAAfA,EAAKX,OAChDsB,EAAWH,EAAKE,KAAI,SAAAV,GAAI,OAAI,cAAC,EAAD,CAAoBA,KAAMA,GAAfA,EAAKX,OAClD,OACI,eAAC,WAAD,WACI,uCACA,8BAAMoB,IACN,uBACA,sCACA,8BAAME,QCgCHC,E,4MAvCb7B,MAAQ,CACNuB,MAAO,CACL,CACAjB,GAAI,EACJY,KAAM,oBACNF,MAAO,MACPG,KAAM,aACNG,QAAQ,EACRQ,WAAY,MAEZ,CACExB,GAAI,EACJY,KAAM,sBACNF,MAAO,QACPG,KAAM,aACNG,QAAQ,EACRQ,WAAY,MACZ,CACAxB,GAAI,EACJY,KAAM,4BACNF,MAAO,OACPG,KAAM,aACNG,QAAQ,EACRQ,WAAY,Q,4CAGlB,WACE,OACI,sBAAKV,UAAU,MAAf,UACE,oEACA,gFACA,cAAC,EAAD,CAASG,MAAOZ,KAAKX,MAAMuB,QAC3B,cAAC,EAAD,CAAWA,MAAOZ,KAAKX,MAAMuB,QAC7B,yF,GAnCQX,aCOHmB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.6cc9a67e.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nconst groups = [{id: 0,name: \"important\",color: \"red\"},{id: 1,name: \"job\",color: \"blue\"},{id: 2,name: \"personal\",color: \"green\"},{id: 3,name: \"normal\",color: \"black\"}]\r\n\r\nclass AddTask extends Component {\r\n    state = { \r\n\r\n     }\r\n\r\n    addNewTask = () => {\r\n        console.log(\"added\")\r\n    } \r\n    render() { \r\n        return ( \r\n            <>\r\n                <h2>Add Task</h2>\r\n               \r\n                <div><label htmlFor=\"taskValue\">Task: </label><input type=\"tekst\" id=\"taskValue\" placeholder=\"add task\"/></div>\r\n                <div><label htmlFor=\"deadline\">Completion date:</label> <input type=\"date\" id=\"deadline\" size=\"1\"/></div>\r\n                <div><label htmlFor=\"group\">Category: </label>\r\n                    <select id=\"group\">\r\n                        <option value=\"normal\">Normal</option>\r\n                        <option value=\"job\">Job</option>\r\n                        <option value=\"personal\">Personal</option>\r\n                        <option value=\"important\">Improtant</option>\r\n                    </select>\r\n                </div>\r\n                <button onClick={this.addNewTask}>Add</button>\r\n                <hr />\r\n            </>\r\n         );\r\n    }\r\n}\r\n \r\nexport default AddTask;","import React from 'react';\r\n\r\nconst Task = props => {\r\n    const style = {\r\n        color: props.task.color\r\n    }\r\n    return ( \r\n        <p style={style}><strong>{props.task.text}</strong>, czas do {props.task.date} <button><i className=\"fas fa-check\"></i></button> <button><i className=\"fas fa-trash-alt\"></i></button></p>\r\n     );\r\n}\r\n \r\nexport default Task\r\n","import React, { Fragment } from 'react';\r\nimport Task from './Task'\r\n\r\nconst TasksList = props => {\r\n    const active = props.tasks.filter(task => task.active === true);\r\n    const done = props.tasks.filter(task => task.active !== true);\r\n    const ActiveTask = active.map(task => <Task key={task.id} task={task}/>)\r\n    const DoneTask = done.map(task => <Task key={task.id} task={task}/>)\r\n    return ( \r\n        <Fragment>\r\n            <h1>To Do</h1>\r\n            <div>{ActiveTask}</div>\r\n            <hr/>\r\n            <h1>Done</h1>\r\n            <div>{DoneTask}</div>\r\n        </Fragment>\r\n     )\r\n}\r\n \r\nexport default TasksList\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport AddTask from './AddTask'\nimport TasksList from './TasksList'\n\nclass App extends Component {\n// {id: 0,name: \"important\",color: \"red\"},{id: 1,name: \"job\",color: \"blue\"},{id: 2,name: \"personal\",color: \"green\"}\n  state = {\n    tasks: [\n      {\n      id: 0,\n      text: \"Wyjdź z psem\",\n      color: \"red\",\n      date: \"2021-10-22\",\n      active: false,\n      finishDate: null\n      },\n      {\n        id: 1,\n        text: \"Poleć na marsa\",\n        color: \"green\",\n        date: \"2021-09-02\",\n        active: true,\n        finishDate: null\n      },{\n        id: 2,\n        text: \"Zbuduj wehikuł czasu\",\n        color: \"blue\",\n        date: \"2021-07-14\",\n        active: true,\n        finishDate: null\n      }]}\n\n  render() { \n    return ( \n        <div className=\"App\">\n          <h1>Plan your day just here, just now!</h1>\n          <q>The secret of getting ahead is getting started.</q>\n          <AddTask tasks={this.state.tasks}/>\n          <TasksList tasks={this.state.tasks}/>\n          <footer>designed and created by Bartosz Zięcina</footer>\n        </div>\n     );\n  }\n}\n \nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}